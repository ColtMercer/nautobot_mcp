version: "3.9"

services:
  mongo:
    image: mongo:6
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - devnet
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-nautobot}
      POSTGRES_USER: ${POSTGRES_USER:-nautobot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nautobot}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nautobot}"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - devnet

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - devnet

  nautobot:
    image: networktocode/nautobot:stable
    environment:
      NAUTOBOT_DB_HOST: db
      NAUTOBOT_DB_NAME: ${POSTGRES_DB:-nautobot}
      NAUTOBOT_DB_USER: ${POSTGRES_USER:-nautobot}
      NAUTOBOT_DB_PASSWORD: ${POSTGRES_PASSWORD:-nautobot}
      NAUTOBOT_REDIS_HOST: redis
      NAUTOBOT_REDIS_PORT: 6379
      NAUTOBOT_ALLOWED_HOSTS: "*"
      NAUTOBOT_DEBUG: ${DEBUG:-true}
      NAUTOBOT_SECRET_KEY: changeme-secret-key-for-development-only
      NAUTOBOT_GRAPHQL_ENABLED: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - devnet

  mcp-nautobot:
    build: ./services/mcp-nautobot
    environment:
      NAUTOBOT_URL: ${NAUTOBOT_URL:-http://nautobot:8080}
      NAUTOBOT_TOKEN: ${NAUTOBOT_TOKEN:-nautobot-mcp-token-1234567890abcdef}
      GRAPHQL_PATH: ${GRAPHQL_PATH:-/api/graphql/}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      MCP_API_KEY: ${MCP_API_KEY:-dev-mcp-key}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}
    depends_on:
      nautobot:
        condition: service_healthy
    ports:
      - "7001:7001"
    networks:
      - devnet

  chat-ui:
    build: ./services/chat-ui
    environment:
      MCP_SERVERS: '[{"name":"mcp-nautobot","url":"http://mcp-nautobot:7001"}]'
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}
      DEFAULT_MODEL: ${DEFAULT_MODEL:-gpt-4o-mini}
      MONGO_URI: ${MONGO_URI:-mongodb://mongo:27017}
      MONGO_DB: ${MONGO_DB:-nautobot_mcp}
    volumes:
      - ./exports:/app/exports
    ports:
      - "8501:8501"
    depends_on:
      mongo:
        condition: service_started
      mcp-nautobot:
        condition: service_started
    networks:
      - devnet

  seed-data:
    build: ./services/seed-data
    environment:
      NAUTOBOT_URL: ${NAUTOBOT_URL:-http://nautobot:8080}
      NAUTOBOT_TOKEN: ${NAUTOBOT_TOKEN:-nautobot-mcp-token-1234567890abcdef}
    depends_on:
      nautobot:
        condition: service_healthy
    networks:
      - devnet

volumes:
  dbdata:
  mongodata:

networks:
  devnet:
    driver: bridge 